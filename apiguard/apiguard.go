package apiguard

// These are metadata associated with the API key
// at the time of creation. This is useful to set
// application specific information that can be
// passed across the API Guard to the API server.
type KeyInfo struct {
	OrganizationID string `json:"org_id"`
	TeamID         string `json:"team_id"`
	UserID         string `json:"user_id"`
	KeyID          string `json:"key_id"`
}

type TokenInfo struct {
	Email         string `json:"email"`
	EmailVerified bool   `json:"email_verified"`
	Subject       string `json:"sub"`
	Audience      string `json:"aud"`
}

// Context represent the information passed by the API guard
// to the API handler (down stream servers).
type Context struct {
	// Remote client address
	RemoteAddr string

	// Request ID generated by the API Guard or passed by client
	RequestID string

	// Path as seen by the API Guard. This is important
	// to avoid parser differential vulnerabilities
	Path string

	// Secret shared between API Guard and Server. This enables
	// API servers to verify that the request is actually coming from API Guard
	// and not spoofed.
	TrustToken string

	// Meta Data stored in the API Key by client applications
	Key KeyInfo

	// Token info, available when JWT token is used
	Token TokenInfo
}
