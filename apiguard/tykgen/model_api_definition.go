/*
 * Tyk Gateway API
 *
 * The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>
 *
 * API version: 5.5.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

type ApiDefinition struct {
	Tags []string `json:"tags,omitempty"`
	CORS *ApiDefinitionCors `json:"CORS,omitempty"`
	Active bool `json:"active,omitempty"`
	AllowedIps []string `json:"allowed_ips,omitempty"`
	ApiId string `json:"api_id,omitempty"`
	Auth *Auth `json:"auth,omitempty"`
	AuthProvider *AuthProviderMeta `json:"auth_provider,omitempty"`
	BaseIdentityProvidedBy string `json:"base_identity_provided_by,omitempty"`
	BasicAuth *ApiDefinitionBasicAuth `json:"basic_auth,omitempty"`
	BlacklistedIps []string `json:"blacklisted_ips,omitempty"`
	CacheOptions *CacheOptions `json:"cache_options,omitempty"`
	Certificates []string `json:"certificates,omitempty"`
	ClientCertificates []string `json:"client_certificates,omitempty"`
	ConfigData map[string]interface{} `json:"config_data,omitempty"`
	CustomMiddleware *MiddlewareSection `json:"custom_middleware,omitempty"`
	CustomMiddlewareBundle string `json:"custom_middleware_bundle,omitempty"`
	Definition *ApiDefinitionDefinition `json:"definition,omitempty"`
	DisableQuota bool `json:"disable_quota,omitempty"`
	DisableRateLimit bool `json:"disable_rate_limit,omitempty"`
	DoNotTrack bool `json:"do_not_track,omitempty"`
	Domain string `json:"domain,omitempty"`
	DontSetQuotaOnCreate bool `json:"dont_set_quota_on_create,omitempty"`
	EnableBatchRequestSupport bool `json:"enable_batch_request_support,omitempty"`
	EnableContextVars bool `json:"enable_context_vars,omitempty"`
	EnableCoprocessAuth bool `json:"enable_coprocess_auth,omitempty"`
	EnableIpBlacklisting bool `json:"enable_ip_blacklisting,omitempty"`
	EnableIpWhitelisting bool `json:"enable_ip_whitelisting,omitempty"`
	EnableJwt bool `json:"enable_jwt,omitempty"`
	EnableSignatureChecking bool `json:"enable_signature_checking,omitempty"`
	EventHandlers *EventHandlerMetaConfig `json:"event_handlers,omitempty"`
	ExpireAnalyticsAfter int64 `json:"expire_analytics_after,omitempty"`
	GlobalRateLimit *GlobalRateLimit `json:"global_rate_limit,omitempty"`
	HmacAllowedAlgorithms []string `json:"hmac_allowed_algorithms,omitempty"`
	HmacAllowedClockSkew float64 `json:"hmac_allowed_clock_skew,omitempty"`
	Id string `json:"id,omitempty"`
	Internal bool `json:"internal,omitempty"`
	JwtClientBaseField string `json:"jwt_client_base_field,omitempty"`
	JwtExpiresAtValidationSkew int32 `json:"jwt_expires_at_validation_skew,omitempty"`
	JwtIdentityBaseField string `json:"jwt_identity_base_field,omitempty"`
	JwtIssuedAtValidationSkew int32 `json:"jwt_issued_at_validation_skew,omitempty"`
	JwtNotBeforeValidationSkew int32 `json:"jwt_not_before_validation_skew,omitempty"`
	JwtPolicyFieldName string `json:"jwt_policy_field_name,omitempty"`
	JwtScopeClaimName string `json:"jwt_scope_claim_name,omitempty"`
	JwtScopeToPolicyMapping map[string]string `json:"jwt_scope_to_policy_mapping,omitempty"`
	JwtSigningMethod string `json:"jwt_signing_method,omitempty"`
	JwtSkipKid bool `json:"jwt_skip_kid,omitempty"`
	JwtSource string `json:"jwt_source,omitempty"`
	Name string `json:"name,omitempty"`
	Notifications *NotificationsManager `json:"notifications,omitempty"`
	OauthMeta *ApiDefinitionOauthMeta `json:"oauth_meta,omitempty"`
	OpenidOptions *OpenIdOptions `json:"openid_options,omitempty"`
	OrgId string `json:"org_id,omitempty"`
	PinnedPublicKeys map[string]string `json:"pinned_public_keys,omitempty"`
	Proxy *ApiDefinitionProxy `json:"proxy,omitempty"`
	ResponseProcessors []ResponseProcessor `json:"response_processors,omitempty"`
	SessionLifetime int64 `json:"session_lifetime,omitempty"`
	SessionProvider *SessionProviderMeta `json:"session_provider,omitempty"`
	Slug string `json:"slug,omitempty"`
	StripAuthData bool `json:"strip_auth_data,omitempty"`
	TagHeaders []string `json:"tag_headers,omitempty"`
	UpstreamCertificates map[string]string `json:"upstream_certificates,omitempty"`
	UptimeTests *ApiDefinitionUptimeTests `json:"uptime_tests,omitempty"`
	UseBasicAuth bool `json:"use_basic_auth,omitempty"`
	UseKeyless bool `json:"use_keyless,omitempty"`
	UseMutualTlsAuth bool `json:"use_mutual_tls_auth,omitempty"`
	UseOauth2 bool `json:"use_oauth2,omitempty"`
	UseOpenid bool `json:"use_openid,omitempty"`
	UseStandardAuth bool `json:"use_standard_auth,omitempty"`
	VersionData *ApiDefinitionVersionData `json:"version_data,omitempty"`
}
