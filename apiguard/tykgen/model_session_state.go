/*
 * Tyk Gateway API
 *
 * The Tyk Gateway API is the primary means for integrating your application with the Tyk API Gateway system. This API is very small, and has no granular permissions system. It is intended to be used purely for internal automation and integration.  **Warning: Under no circumstances should outside parties be granted access to this API.**  The Tyk Gateway API is capable of:  * Managing session objects (key generation) * Managing and listing policies * Managing and listing API Definitions (only when not using the Dashboard) * Hot reloads / reloading a cluster configuration * OAuth client creation (only when not using the Dashboard)   In order to use the Gateway API, you'll need to set the `secret` parameter in your tyk.conf file.  The shared secret you set should then be sent along as a header with each Gateway API Request in order for it to be successful:  ``` x-tyk-authorization: <your-secret> ``` <br/> <b>The Tyk Gateway API is subsumed by the Tyk Dashboard API in Pro installations.</b>
 *
 * API version: 5.5.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

// There's a data structure that's based on this and it's used for Protocol Buffer support, make sure to update \"coprocess/proto/coprocess_session_state.proto\" and generate the bindings using: cd coprocess/proto && ./update_bindings.sh
type SessionState struct {
	Tags []string `json:"tags,omitempty"`
	AccessRights map[string]AccessDefinition `json:"access_rights,omitempty"`
	Alias string `json:"alias,omitempty"`
	Allowance float64 `json:"allowance,omitempty"`
	ApplyPolicies []string `json:"apply_policies,omitempty"`
	ApplyPolicyId string `json:"apply_policy_id,omitempty"`
	BasicAuthData *SessionStateBasicAuthData `json:"basic_auth_data,omitempty"`
	Certificate string `json:"certificate,omitempty"`
	DataExpires int64 `json:"data_expires,omitempty"`
	EnableDetailRecording bool `json:"enable_detail_recording,omitempty"`
	Expires int64 `json:"expires,omitempty"`
	HmacEnabled bool `json:"hmac_enabled,omitempty"`
	HmacString string `json:"hmac_string,omitempty"`
	IdExtractorDeadline int64 `json:"id_extractor_deadline,omitempty"`
	IsInactive bool `json:"is_inactive,omitempty"`
	JwtData *SessionStateJwtData `json:"jwt_data,omitempty"`
	LastCheck int64 `json:"last_check,omitempty"`
	LastUpdated string `json:"last_updated,omitempty"`
	MetaData map[string]interface{} `json:"meta_data,omitempty"`
	Monitor *SessionStateMonitor `json:"monitor,omitempty"`
	OauthClientId string `json:"oauth_client_id,omitempty"`
	OauthKeys map[string]string `json:"oauth_keys,omitempty"`
	OrgId string `json:"org_id,omitempty"`
	Per float64 `json:"per,omitempty"`
	QuotaMax int64 `json:"quota_max,omitempty"`
	QuotaRemaining int64 `json:"quota_remaining,omitempty"`
	QuotaRenewalRate int64 `json:"quota_renewal_rate,omitempty"`
	QuotaRenews int64 `json:"quota_renews,omitempty"`
	Rate float64 `json:"rate,omitempty"`
	SessionLifetime int64 `json:"session_lifetime,omitempty"`
	Smoothing *RateLimitSmoothing `json:"smoothing,omitempty"`
	ThrottleInterval float64 `json:"throttle_interval,omitempty"`
	ThrottleRetryLimit int64 `json:"throttle_retry_limit,omitempty"`
}
